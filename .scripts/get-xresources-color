#!/usr/bin/env python3
import argparse
from os import path

DESCRIPTION = """
Simple Python script to get a define declaration value from the ~/.Xresources
file.

It expects an argument, the name of the variable to get the value from.

Examples:
    $ get-xresources-color black
    #546e7a

    $ get-xresources-color bg
    #0f111a

Filters by line the contents of the file, gets the ones that start with
'#define'. Splits by space to get the name and its value then goes through
each name until it finds the one that matches the given argument and prints
it.

If it doesn't find a match, doesn't print anything and exits with 1.

Mainly made for being able to get those values inside
~/.config/bspwm/bspwmrc
""".strip()


def filter_colors(line: str):
    return line.startswith("#define")


def map_colors(line: str):
    name, hex_color = line.split()[1:]
    return (name, hex_color)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description=DESCRIPTION,
        formatter_class=argparse.RawDescriptionHelpFormatter,
    )
    parser.add_argument(
        "--xresources-file",
        default=path.expanduser("~/.config/X11/Xresources"),
        type=str,
        metavar="FILE",
        help="Alternative Xresources file to use.",
    )
    parser.add_argument(
        "name",
        type=str,
        metavar="NAME",
        help="Name of the color to get.",
    )

    args = parser.parse_args()

    with open(args.xresources_file, "r", encoding="utf-8") as f:
        content = f.read()

    for name, hex_color in map(map_colors, filter(filter_colors, content.splitlines())):
        if not name == args.name:
            continue

        print(hex_color)
        exit(0)

    exit(1)
